version: '1.0'
services:
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    depends_on:
      - elasticsearch
    environment:
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=elasticsearch:9300"
    ports:
      - "9411:9411"
    networks:
      backend:
        aliases:
          - "zipkin"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      backend:
        aliases:
          - "elasticsearch"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
      - 5601:5601
    networks:
      backend:
        aliases:
          - "kibana"
  logstash:
    image: docker.elastic.co/logstash/logstash:7.7.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./config:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    networks:
      backend:
        aliases:
          - "logstash"
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      backend:
        aliases:
          - "zookeeper"
  kafkaserver:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"
  configserver:
    image: ing/config-server:0.0.1-SNAPSHOT
    container_name: config-server
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "config-server"
  eurekaserver:
    image: ing/eureka-server:0.0.1-SNAPSHOT
    container_name: eurekaServer
    ports:
      - "8070:8070"
    depends_on:
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eureka-server"
  smartwatchapp:
    image: ing/app:0.0.1-SNAPSHOT
    container_name: app
    environment:
      PROFILE: "dev"
    depends_on:
      configserver:
        condition: service_started
      kafkaserver:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - backend

  smartwatchbackend:
    image: ing/backend:0.0.1-SNAPSHOT
    container_name: backend
    environment:
      PROFILE: "dev"
    depends_on:
      configserver:
        condition: service_started
      kafkaserver:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - backend
networks:
  backend:
    driver: bridge
volumes:
  esdata1:
    driver: local
